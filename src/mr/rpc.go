package mr

//
// RPC definitions.
//
// remember to capitalize all names.
//

import (
	"os"
	"strconv"
)

//
// example to show how to declare the arguments
// and reply for an RPC.
//

type ExampleArgs struct {
	X int
}

type ExampleReply struct {
	Y int
}

// Add your RPC definitions here.
type GetTaskArgs struct {
	//the UUID generated by the worker
	//which will uniquely identify it to the coordinator
	workerID string
}

type GetTaskReply struct {
	//whether or not a task was given
	containsTask bool
	//the type of task "MAP" or "REDUCE"
	taskID string
	//the target of the task, if map task
	//this will be the path to the input file
	//if a reduce task it will be the 
	//reduce task number assigned to this target
	taskTarget string
}

// Cook up a unique-ish UNIX-domain socket name
// in /var/tmp, for the coordinator.
// Can't use the current directory since
// Athena AFS doesn't support UNIX-domain sockets.
func coordinatorSock() string {
	s := "/var/tmp/5840-mr-"
	s += strconv.Itoa(os.Getuid())
	return s
}
